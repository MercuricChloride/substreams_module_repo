specVersion: v0.1.0
package:
  name: "soulbound_modules"
  version: v0.1.0

imports:
  entities_change: https://github.com/streamingfast/substreams-entity-change/releases/download/v0.2.1/substreams-entity-change-v0.2.1.spkg
  database_change: https://github.com/streamingfast/substreams-database-change/releases/download/v1.0.0/substreams-database-change-v1.0.0.spkg

protobuf:
  files:
    - soulbound.proto
  importPaths:
    - ./proto

binaries:
  default:
    type: wasm/rust-v1
    file: ./target/wasm32-unknown-unknown/release/soulbound_modules.wasm

modules:
  - name: map_blocks
    kind: map
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:soulbound_modules.v1.Foo

  - name: map_key_value
    kind: map
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:soulbound_modules.v1.Hotdog

  - name: map_hotdog
    kind: map
    inputs:
      - params: string
      - map: map_key_value
    output:
      type: proto:soulbound_modules.v1.Hotdog

  - name: map_events
    initialBlock: 17000000
    kind: map
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:soulbound_modules.v1.Hotdogs

  - name: store_unique_users
    initialBlock: 17000000
    kind: store
    updatePolicy: set_if_not_exists
    valueType: bigint
    inputs:
      - map: map_events

  - name: count_unique_users
    initialBlock: 17000000
    kind: store
    updatePolicy: add
    valueType: bigint
    inputs:
      - store: store_unique_users
        mode: deltas

  - name: map_unique_users
    initialBlock: 17000000
    kind: map
    inputs:
      - store: count_unique_users
        mode: get
    output:
      type: proto:soulbound_modules.v1.Hotdog

  - name: graph_out
    kind: map
    inputs:
      - map: map_events
    output:
      type: proto:substreams.entity.v1.EntityChanges

params:
  #map_events: "0x5Af0D9827E0c53E4799BB226655A1de152A425a5&&(Transfer&address_indexed_from&address_indexed_to&uint256_indexed_tokenId)"
   #Adding whitespace for readability here
  #map_events: "0x000000000000Ad05Ccc4F10045630fb830B95127&&(NonceIncremented&address_indexed_trader&uint256_newNonce)"
  map_events: "0x000000000000Ad05Ccc4F10045630fb830B95127&&(OrdersMatched&address_indexed_maker&address_indexed_taker&(address_trader&uint8_side &address_matchingPolicy&address_collection&uint256_tokenId&uint256_amount&address_paymentToken&uint256_price  &uint256_listingTime&uint256_expirationTime&(uint16_rate&address_recipient)[]_fees&uint256_salt&bytes_extraParams)_sell&bytes32_sellHash&(address_trader&uint8_side&address_matchingPolicy&address_collection&uint256_tokenId&uint256_amount&address_paymentToken&uint256_price&uint256_listingTime&uint256_expirationTime&(uint16_rate&address_recipient)[]_fees&uint256_salt&bytes_extraParams)_buy&bytes32_buyHash)"
  # so when we come across the ) char, we are taking the wrong param name
 # "0x000000000000Ad05Ccc4F10045630fb830B95127
# &&(
# OrdersMatched
#   &address_indexed_maker
#   &address_indexed_taker
#   &(
#     address_trader
#     &uint_side
#     &address_matchingPolicy
#     &address_collection
#     &uint256_tokenId
#     &uint256_amount
#     &address_paymentToken &uint256_price  &uint256_listingTime  &uint256_expirationTime
#     &(
#       uint16_rate
#       &address_recipient)_fees
#     &uint256_salt
#     &bytes_extraParams)_sell
#   &bytes32_sellHash)
#   &(
#     address_trader
#     &uint_side
#     &address_matchingPolicy
#     &address_collection
#     &uint256_tokenId
#     &uint256_amount
#     &address_paymentToken &uint256_price  &uint256_listingTime  &uint256_expirationTime
#     &(
#       uint16_rate
#       &address_recipient)_fees
#     &uint256_salt
#     &bytes_extraParams)_buy
#   &bytes32_buyHash"

  # Example Map
  # name: db_out
  #   kind: map
  #   inputs:
  #     - store: store_block_meta_start
  #       mode: deltas
  #     - store: store_block_meta_end
  #       mode: deltas
  #   output:
  #     type: proto:sf.substreams.sink.database.v1.DatabaseChanges

  # Example store
  # name: store_block_meta_start
  #   kind: store
  #   updatePolicy: set_if_not_exists
  #   valueType: proto:eth.block_meta.v1.BlockMeta
  #   inputs:
  #     - source: sf.ethereum.type.v2.Block
